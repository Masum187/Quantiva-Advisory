// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/de" | "/de/about" | "/de/capabilities/ai" | "/de/capabilities/cloud" | "/de/capabilities/cyber-security" | "/de/capabilities/digital-strategy" | "/de/capabilities/microservices" | "/de/capabilities/sap" | "/de/career" | "/de/cases" | "/de/team" | "/en" | "/en/about" | "/en/capabilities/ai" | "/en/capabilities/cloud" | "/en/capabilities/cyber-security" | "/en/capabilities/digital-strategy" | "/en/capabilities/microservices" | "/en/capabilities/sap" | "/en/career" | "/en/cases" | "/en/team"
type AppRouteHandlerRoutes = "/api/contact"
type PageRoutes = never
type LayoutRoutes = "/" | "/de" | "/en"
type RedirectRoutes = "/de/karriere" | "/en/careers" | "/home"
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api/contact": {}
  "/de": {}
  "/de/about": {}
  "/de/capabilities/ai": {}
  "/de/capabilities/cloud": {}
  "/de/capabilities/cyber-security": {}
  "/de/capabilities/digital-strategy": {}
  "/de/capabilities/microservices": {}
  "/de/capabilities/sap": {}
  "/de/career": {}
  "/de/cases": {}
  "/de/karriere": {}
  "/de/team": {}
  "/en": {}
  "/en/about": {}
  "/en/capabilities/ai": {}
  "/en/capabilities/cloud": {}
  "/en/capabilities/cyber-security": {}
  "/en/capabilities/digital-strategy": {}
  "/en/capabilities/microservices": {}
  "/en/capabilities/sap": {}
  "/en/career": {}
  "/en/careers": {}
  "/en/cases": {}
  "/en/team": {}
  "/home": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/de": never
  "/en": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
